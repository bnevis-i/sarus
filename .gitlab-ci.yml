stages:
  - test


check_version_numbers_and_doc_build:
  stage: test
  script:
    - docker_image_build=ethcscs/sarus-ci-build:1.0.0
    - docker_image_run=ethcscs/sarus-ci-run:1.0.0

    - ./CI/check_that_version_file_is_up_to_date.sh
    - docker run --tty --rm -v $(pwd):/sarus-source ${docker_image_build} /sarus-source/CI/check_version_from_cmake.sh
    - docker run --tty --rm -v $(pwd):/sarus-source ${docker_image_run} /sarus-source/CI/run_documentation_build_test.sh

standalone_archive_debug:
  stage: test
  script:
    - . ./CI/utility_functions.bash
    - docker_image_build=ethcscs/sarus-ci-build:1.0.0
    - docker_image_run=ethcscs/sarus-ci-run:1.0.0

    # Build, install, test
    - build_type=Debug
    - build_install_test_sarus ${build_type} ${docker_image_build} ${docker_image_run}

  artifacts:
    name: "sarus-Debug-$CI_COMMIT_REF_NAME"
    paths:
      - sarus-Debug.tar.gz
      - README.md


standalone_archive_release:
  stage: test
  script:
    - . ./CI/utility_functions.bash
    - docker_image_build=ethcscs/sarus-ci-build:1.0.0
    - docker_image_run=ethcscs/sarus-ci-run:1.0.0

    # Build, install, test
    - build_type=Release
    - build_install_test_sarus ${build_type} ${docker_image_build} ${docker_image_run}

  artifacts:
    name: "sarus-Release-$CI_COMMIT_REF_NAME"
    paths:
      - sarus-Release.tar.gz
      - README.md


spack_package:
  stage: test
  only:
      - master
  script:
      - docker_image=ethcscs/sarus-spack:1.0.0-ubuntu16.04
      - docker run --tty --rm --privileged --user root -v $(pwd):/sarus-source ${docker_image} /sarus-source/CI/run_spack_package_test.sh
