stages:
  - build_sarus_images
  - build_sarus_and_test
  - build_sarus_from_scratch_and_test
  - publish_sarus_images

build_sarus_images:
  stage: build_sarus_images
  script:
    - . CI/utility_docker_functions.bash
    - sarus-build-images

check_version_and_docs:
  stage: build_sarus_and_test
  script:
    - . CI/utility_docker_functions.bash
    - sarus-check-version-and-docs $(pwd)

standalone_archive_debug:
  stage: build_sarus_and_test
  script:
    - . ./CI/utility_docker_functions.bash
    - sarus-build-and-test $(pwd) Debug /users/gitlab-runner/cache/ids/sarus

  artifacts:
    name: "sarus-Debug-$CI_COMMIT_REF_NAME"
    paths:
      - sarus-Debug.tar.gz
      - README.md

standalone_archive_release:
  stage: build_sarus_and_test
  script:
    - . ./CI/utility_docker_functions.bash
    - sarus-build-and-test $(pwd) Release /users/gitlab-runner/cache/ids/sarus

  artifacts:
    name: "sarus-Release-$CI_COMMIT_REF_NAME"
    paths:
      - sarus-Release.tar.gz
      - README.md

# TODO PART 2: Remove duplicated scripts of all these build_from_source
from_source_ubuntu18.04:
  stage: build_sarus_from_scratch_and_test
  only:
      - master
      - develop
  script:
      - . ./CI/utility_docker_functions.bash
      - sarus-build-from-scratch-and-test $(pwd) ubuntu:18.04

from_source_debian10:
  stage: build_sarus_from_scratch_and_test
  only:
      - master
      - develop
  script:
      - . ./CI/utility_docker_functions.bash
      - sarus-build-from-scratch-and-test $(pwd) debian:10

from_source_centos7:
  stage: build_sarus_from_scratch_and_test
  only:
      - master
      - develop
  script:
      - . ./CI/utility_docker_functions.bash
      - sarus-build-from-scratch-and-test $(pwd) centos:7

spack_package:
  stage: build_sarus_from_scratch_and_test
  # TODO PART 2: Align spack image creation
  only:
      - master
      - develop
  script:
      - docker_image=ethcscs/sarus-spack:1.1.0-ubuntu16.04
      - docker run --tty --rm --privileged --user root -v $(pwd):/sarus-source ${docker_image} /sarus-source/CI/run_spack_package_test.sh

publish_sarus_images:
  stage: publish_sarus_images
  only:
    - master
    - develop
  script:
    - . ./CI/utility_docker_functions.bash
    - sarus-publish-images