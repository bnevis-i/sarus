version: '2'

services:
  controller:
    image: ethcscs/sarus-ci:1.0.0
    hostname: controller
    volumes:
      - etc-munge-volume:/etc/munge
      - etc-slurm-llnl-volume:/etc/slurm-llnl
      - opt-sarus-volume:/opt/sarus
      - @cached_home_dir@:/home/docker
      - ./sync:/var/sync
      - ../..:/sarus-source
    user: root
    command:  >
      bash -c ". /sarus-source/CI/utility_functions.bash
      && change_uid_gid_of_docker_user @host_uid@ @host_gid@
      && /usr/sbin/create-munge-key -f
      && /etc/init.d/munge start
      && generate_slurm_conf /etc/slurm-llnl/slurm.conf controller server0 server1
      && slurmctld -L /var/log/slurm-llnl/slurmctld
      && install_sarus_from_archive /opt/sarus @build_dir@/sarus.tar.gz
      && touch /var/sync/controller-start-finished
      && sleep infinity"

  server0:
    image: ethcscs/sarus-ci:1.0.0
    privileged: true
    hostname: server0
    volumes:
      - etc-munge-volume:/etc/munge
      - etc-slurm-llnl-volume:/etc/slurm-llnl
      - opt-sarus-volume:/opt/sarus
      - @cached_home_dir@:/home/docker
      - ./sync:/var/sync
      - ../..:/sarus-source
    user: root
    command: >
      bash -c "while [ ! -e /var/sync/controller-start-finished ]; do
        sleep 1;
      done;
      . /sarus-source/CI/utility_functions.bash
      && change_uid_gid_of_docker_user @host_uid@ @host_gid@
      && /etc/init.d/munge start
      && touch /etc/slurm-llnl/gres.conf
      && slurmd -L /var/log/slurm-llnl/slurmd
      && sleep infinity"

  # Docker compose allows to automatically scale a service, i.e. spawn additional instances
  # of a service. Unfortunately, in our case it is not possible to use such feature to
  # automatically instantiate other SLURM servers, because SLURM expects the different servers
  # to be accessible directly through different hostnames, whereas Docker compose would put a
  # load balancer in front of the servers and they would look like a single machine with one hostname.
  server1:
    image: ethcscs/sarus-ci:1.0.0
    privileged: true
    hostname: server1
    volumes:
      - etc-munge-volume:/etc/munge
      - etc-slurm-llnl-volume:/etc/slurm-llnl
      - opt-sarus-volume:/opt/sarus
      - @cached_home_dir@:/home/docker
      - ./sync:/var/sync
      - ../..:/sarus-source
    user: root
    command: >
      bash -c "while [ ! -e /var/sync/controller-start-finished ]; do
        sleep 1;
      done;
      . /sarus-source/CI/utility_functions.bash
      && change_uid_gid_of_docker_user @host_uid@ @host_gid@
      && /etc/init.d/munge start
      && touch /etc/slurm-llnl/gres.conf
      && slurmd -L /var/log/slurm-llnl/slurmd
      && sleep infinity"

volumes:
  etc-munge-volume:
  etc-slurm-llnl-volume:
  opt-sarus-volume:
