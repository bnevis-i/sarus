dist: bionic

services:
  - docker

before_install:
  - docker --version

install:
  - . CI/utility_docker_functions.bash
  - sarus-build-images

jobs:
  include:
    - stage: "Build Sarus and Test"
      name: "Version and Docs"
      if: branch IN (master, develop)
      script:
      - . CI/utility_docker_functions.bash
      - sarus-check-version-and-docs ${TRAVIS_BUILD_DIR}

    - name: "Standalone + Unit and Integration tests"
      script:
      - ". ./CI/utility_functions.bash"
      - sarus-build-and-test ${TRAVIS_BUILD_DIR} Release
      deploy:
        provider: releases
        name: ${TRAVIS_BRANCH}
        api_key:
          secure: W0V8H0y153ZKnoPfMJppzBB7MjZW+82IYtv0jLr32PICLd13ZckL+0b4UkHjjs0HvcHGNzjE6hDwX6+l+qHwF1hDeNLqenJjRT8xcoTSVzAmQryrqjIK7Gqm5Tl29YfPbPUKHxuXqP6C32VZjNlaalhLtWiAGg9S/Xtc1m8+7P4qHskO0sVxQTHCL8jAAK4c1c7dq1bvRsO5XWXsAVSjTuNqBVYg9SsX5YWXL82ctm5SsoeFJbVVSpNAYb0JTAJMKQPF3xeeHjCFQVvJhTvF1mlV+pgG3fOHCNVf6ZyBhXeAXumTU2O5PMwCaRjO7JBmSUtYZkhuwaENLn1JkR9Vr1sRhyTTGklDBdAcPUIfVLtt4CTkRA0la3yWl79/Wv5iHUUnwuM3nP5xbnwhuwC2aXFvwL7YJYeNP2dWv4s7ppo+8HXz41ZEkebk+Z0Hel30dCdDw8t/6VHmZe37DePV0Df2XYcENrxFue/GAdeOx88hVbLj2ckQ6RcnkrKX2nEW+KPoL+F5X+Foac+ao5ikydQfSL7ZuZjMQFU+sLNE5eWIrShCanz9xetf/4X7tUEAIqtvy2ygCwY3IHom0KTLPVMZtD54O0frS9Xx4F4R++XXvSN2CHTfAKOOm4cBtpLn3hffFxDo8hCfc1GNljAewAdd9F027Ghr3De9iLOjGK0=
        file:
          - sarus-Release.tar.gz
          - README.md
        overwrite: true
        skip_cleanup: true
        draft: true
        edge: true
        on:
          repo: eth-cscs/sarus
          branch: master

    - name: "Test install from source Ubuntu 18.04"
      if: branch IN (master, develop)
      script:
      - . ./CI/utility_docker_functions.bash
      - sarus-build-test-from-scratch $(pwd) ubuntu:18.04

    - name: "Test install from source Debian 10"
      if: branch IM (master, develop)
      script:
      - . ./CI/utility_docker_functions.bash
      - sarus-build-test-from-scratch $(pwd) debian:10

    - name: "Test install from source CentOS 7"
      if: branch IN (master, develop)
      script:
      - . ./CI/utility_docker_functions.bash
      - sarus-build-test-from-scratch $(pwd) centos:7

    # TODO PART 2: Align spack image creation
    - name: "Test Spack"
      if: branch IN (master, develop)
      script:
      - docker_image=ethcscs/sarus-spack:1.1.0-ubuntu16.04
      - docker run --tty --rm --privileged --user root -v $(pwd):/sarus-source ${docker_image} /sarus-source/CI/run_spack_package_test.sh

notifications:
  email: false
