dist: bionic

services:
  - docker

before_install:
  - docker --version

install:
  - docker pull ethcscs/sarus-ci-build:1.1.0
  - docker pull ethcscs/sarus-ci-run:1.1.0

jobs:
  include:
    - stage: "Sarus Tests"
      name: "Version and Docs"
      script:
      - docker run --tty --rm -v ${TRAVIS_BUILD_DIR}:/sarus-source ethcscs/sarus-ci-build:1.1.0
        /sarus-source/CI/check_version_from_cmake.sh
      - docker run --tty --rm -v ${TRAVIS_BUILD_DIR}:/sarus-source ethcscs/sarus-ci-run:1.1.0
        /sarus-source/CI/run_documentation_build_test.sh
      if: branch IN (master, develop)
    - name: "Standalone + Unit and Integration tests"
      script:
      - ". ./CI/utility_functions.bash"
      - build_install_test_sarus Release ethcscs/sarus-ci-build:1.1.0 ethcscs/sarus-ci-run:1.1.0
      deploy:
        provider: releases
        name: ${TRAVIS_BRANCH}
        api_key:
          secure: W0V8H0y153ZKnoPfMJppzBB7MjZW+82IYtv0jLr32PICLd13ZckL+0b4UkHjjs0HvcHGNzjE6hDwX6+l+qHwF1hDeNLqenJjRT8xcoTSVzAmQryrqjIK7Gqm5Tl29YfPbPUKHxuXqP6C32VZjNlaalhLtWiAGg9S/Xtc1m8+7P4qHskO0sVxQTHCL8jAAK4c1c7dq1bvRsO5XWXsAVSjTuNqBVYg9SsX5YWXL82ctm5SsoeFJbVVSpNAYb0JTAJMKQPF3xeeHjCFQVvJhTvF1mlV+pgG3fOHCNVf6ZyBhXeAXumTU2O5PMwCaRjO7JBmSUtYZkhuwaENLn1JkR9Vr1sRhyTTGklDBdAcPUIfVLtt4CTkRA0la3yWl79/Wv5iHUUnwuM3nP5xbnwhuwC2aXFvwL7YJYeNP2dWv4s7ppo+8HXz41ZEkebk+Z0Hel30dCdDw8t/6VHmZe37DePV0Df2XYcENrxFue/GAdeOx88hVbLj2ckQ6RcnkrKX2nEW+KPoL+F5X+Foac+ao5ikydQfSL7ZuZjMQFU+sLNE5eWIrShCanz9xetf/4X7tUEAIqtvy2ygCwY3IHom0KTLPVMZtD54O0frS9Xx4F4R++XXvSN2CHTfAKOOm4cBtpLn3hffFxDo8hCfc1GNljAewAdd9F027Ghr3De9iLOjGK0=
        file:
          - sarus-Release.tar.gz
          - README.md
        overwrite: true
        skip_cleanup: true
        draft: true
        edge: true
        on:
          repo: eth-cscs/sarus
          branch: master
    - name: "Test Spack"
      script:
      - docker_image=ethcscs/sarus-spack:1.1.0-ubuntu16.04
      - docker run --tty --rm --privileged --user root -v $(pwd):/sarus-source ${docker_image} /sarus-source/CI/run_spack_package_test.sh
      if: branch IN (master, develop)
    - name: "Test install from source Ubuntu 18.04"
      script:
      - docker_image=ubuntu:18.04
      - docker run --tty --rm --privileged --user root -v $(pwd):/sarus-source ${docker_image} /sarus-source/CI/installation/test_driver.sh ${docker_image}
      if: branch IN (master, develop)
    - name: "Test install from source Debian 10"
      script:
      - docker_image=debian:10
      - docker run --tty --rm --privileged --user root -v $(pwd):/sarus-source ${docker_image} /sarus-source/CI/installation/test_driver.sh ${docker_image}
      if: branch IM (master, develop)
    - name: "Test install from source CentOS 7"
      script:
      - docker_image=centos:7
      - docker run --tty --rm --privileged --user root -v $(pwd):/sarus-source ${docker_image} /sarus-source/CI/installation/test_driver.sh ${docker_image}
      if: branch IN (master, develop)

notifications:
  email: false
